{
  "_id": "{{@ system @}}",
  "oauth2": {
    "access_token": "$SECRET(oauth_access_token)",
    "client_id": "$SECRET(oauth_client_id)",
    "client_secret": "$SECRET(oauth_client_secret)",
    "refresh_token": "$SECRET(oauth_refresh_token)",
    "token_url": "{{@ token_url @}}"
  },
  "operations": {
    "alternate_list": {
      "headers": {
        "Accept": "application/json"
      },
      "method": "GET",
      "url": "{{ properties.base_url }}"
    },
    "contact-webhook-insert": {
      "method": "POST",
      "payload": {
        "Events": [
          "contact.created",
          "contact.changed",
          "contact.deleted"
        ],
        "Name": "Sesam Talk Contact events",
        "State": "Active",
        "TargetUrl": "{{@ service_url @}}/receivers/{{@ system @}}-contact-event/entities",
        "Type": "webhook"
      },
      "payload-type": "json",
      "url": "Webhook"
    },
    "defaults": {
      "headers": {
        "Accept": "application/json"
      },
      "method": "GET",
      "url": "{{ properties.base_url }}"
    },
    "delete": {
      "method": "DELETE",
      "url": "{{ properties.base_url }}/{{ entity[properties.lookup_id] }}"
    },
    "insert": {
      "method": "POST",
      "url": "{{ properties.base_url }}"
    },
    "list": {
      "headers": {
        "Accept": "application/json",
        "SO-TimeZone": "includeTZOffset"
      },
      "id_expression": "{{ PrimaryKey }}",
      "method": "GET",
      "next_page_link": "{{@ base_url @}}/{{@ account_id @}}/api/v1/{{ properties.base_url }}",
      "next_page_termination_strategy": [
        "not-full-page",
        "empty-result"
      ],
      "page_size": 100,
      "params": {
        "$filter": "{% if since is defined and since is not none %}({{ properties.updated_param }} afterTime '{{ since }}'){% else %}({{ properties.updated_param }} afterTime '1970-01-01T00:00:00'){% endif %}",
        "$orderby": "{{ properties.primary_key }}",
        "$skip": "{{ page_size|int*page }}",
        "$top": "{{ page_size }}"
      },
      "payload_property": "value",
      "url": "{{ properties.base_url }}"
    },
    "lookup": {
      "headers": {
        "Accept": "application/json",
        "SO-TimeZone": "includeTZOffset"
      },
      "method": "GET",
      "url": "{{ properties.base_url }}/{{ entity[properties.lookup_id] }}"
    },
    "lookup-from-list": {
      "headers": {
        "Accept": "application/json",
        "SO-TimeZone": "includeTZOffset"
      },
      "id_expression": "{{ properties.primary_key|string }}",
      "method": "GET",
      "url": "{{ properties.base_url }}/{{ entity[properties.list_id] }}"
    },
    "ownercontactlink-list": {
      "headers": {
        "Accept": "application/json"
      },
      "method": "GET",
      "payload_property": "value",
      "url": "archive/dynamic?$select=ownercontactlink.contact_id,ownercontactlink.contact_id.name"
    },
    "person-webhook-insert": {
      "method": "POST",
      "payload": {
        "Events": [
          "person.created",
          "person.changed",
          "person.deleted",
          "person.consented",
          "person.unconsented"
        ],
        "Name": "Sesam Talk Person events",
        "State": "Active",
        "TargetUrl": "{{@ service_url @}}/receivers/{{@ system @}}-person-event/entities",
        "Type": "webhook"
      },
      "payload-type": "json",
      "url": "Webhook"
    },
    "project-webhook-insert": {
      "method": "POST",
      "payload": {
        "Events": [
          "project.created",
          "project.changed",
          "project.deleted"
        ],
        "Name": "Sesam Talk Project events",
        "State": "Active",
        "TargetUrl": "{{@ service_url @}}/receivers/{{@ system @}}-project-event/entities",
        "Type": "webhook"
      },
      "payload-type": "json",
      "url": "Webhook"
    },
    "put-update": {
      "method": "PUT",
      "url": "{{ properties.base_url }}/{{ entity[properties.lookup_id] }}"
    },
    "quote-lookup": {
      "headers": {
        "Accept": "application/json"
      },
      "method": "POST",
      "payload": {
        "QuoteId": "{{ entity['quote/quoteId'] }}"
      },
      "url": "Agents/Quote/GetQuoteEntity"
    },
    "quote-webhook-insert": {
      "method": "POST",
      "payload": {
        "Events": [
          "quote.approved",
          "quote.rejected",
          "quote.sent",
          "quote.ordered"
        ],
        "Name": "Sesam Talk Quote events",
        "State": "Active",
        "TargetUrl": "{{@ service_url @}}/receivers/{{@ system @}}-quote-event/entities",
        "Type": "webhook"
      },
      "payload-type": "json",
      "url": "Webhook"
    },
    "quotealternative-create": {
      "headers": {
        "Accept": "application/json"
      },
      "method": "POST",
      "payload": {
        "QuoteVersionId": "{{ entity['$source']['QuoteVersionId'] }}"
      },
      "url": "Agents/Quote/CreateQuoteAlternative"
    },
    "quotealternative-default": {
      "headers": {
        "Accept": "application/json"
      },
      "method": "POST",
      "url": "Agents/Quote/CreateDefaultQuoteAlternative"
    },
    "quotealternative-list": {
      "headers": {
        "Accept": "application/json"
      },
      "id_expression": "{{ PrimaryKey }}",
      "method": "GET",
      "params": {
        "$filter": "{% if since is defined and since is not none %}(QuoteAlternative.updated afterTime '{{ since }}'){% endif %}",
        "$orderby": "PrimaryKey asc",
        "$select": "QuoteAlternative.quotealternative_id,QuoteAlternative.ERPQuoteAlternativeKey,QuoteAlternative.QuoteVersionId,QuoteAlternative.Name,QuoteAlternative.Description,QuoteAlternative.Status,QuoteAlternative.Reason,QuoteAlternative.ERPDiscountPercent,QuoteAlternative.ERPDiscountAmount,QuoteAlternative.DiscountPercent,QuoteAlternative.DiscountAmount,QuoteAlternative.UserValueOverride,QuoteAlternative.VATInfo,QuoteAlternative.VAT,QuoteAlternative.EarningPercent,QuoteAlternative.EarningAmount,QuoteAlternative.TotalPrice,QuoteAlternative.extraField1,QuoteAlternative.extraField2,QuoteAlternative.extraField3,QuoteAlternative.extraField4,QuoteAlternative.extraField5,QuoteAlternative.registered,QuoteAlternative.registered_associate_id,QuoteAlternative.updated,QuoteAlternative.updated_associate_id,QuoteAlternative.updatedCount"
      },
      "payload_property": "value",
      "url": "archive/Dynamic"
    },
    "quotealternative-lookup": {
      "headers": {
        "Accept": "application/json"
      },
      "method": "POST",
      "url": "Agents/Quote/GetQuoteAlternative?quoteAlternativeId={{ entity['QuoteAlternativeId'] }}"
    },
    "quotealternative-sale-lookup": {
      "headers": {
        "Accept": "application/json"
      },
      "method": "POST",
      "payload": {
        "SaleId": "{{ entity['sesam_SaleId'] }}"
      },
      "url": "Agents/Quote/GetQuoteFromSaleId"
    },
    "quotealternative-save": {
      "headers": {
        "Accept": "application/json"
      },
      "method": "POST",
      "url": "Agents/Quote/SaveQuoteAlternative"
    },
    "quotealternative-save-quote": {
      "headers": {
        "Accept": "application/json"
      },
      "method": "POST",
      "url": "Agents/Quote/SaveQuote"
    },
    "quotealternative-save-quoteversion": {
      "headers": {
        "Accept": "application/json"
      },
      "method": "POST",
      "url": "Agents/Quote/SaveQuoteVersion"
    },
    "quoteline-default": {
      "headers": {
        "Accept": "application/json"
      },
      "method": "POST",
      "payload": {
        "ERPProductKey": "{{ entity['$source']['ERPProductKey'] }}",
        "QuoteAlternativeId": "{{ entity['$source']['QuoteAlternativeId'] }}"
      },
      "url": "Agents/Quote/CreateQuoteLine"
    },
    "quoteline-delete": {
      "headers": {
        "Accept": "application/json"
      },
      "method": "POST",
      "payload": {
        "QuoteLineId": "{{ entity['QuoteLineId'] }}"
      },
      "url": "Agents/Quote/DeleteQuoteLine"
    },
    "quoteline-insert": {
      "headers": {
        "Accept": "application/json"
      },
      "method": "POST",
      "url": "Agents/Quote/SaveQuoteLine"
    },
    "quoteline-list": {
      "headers": {
        "Accept": "application/json"
      },
      "id_expression": "{{ PrimaryKey }}",
      "method": "GET",
      "params": {
        "$filter": "{% if since is defined and since is not none %}(QuoteLine.updated afterTime '{{ since }}'){% endif %}",
        "$orderby": "PrimaryKey asc",
        "$select": "QuoteLine.quoteline_id,QuoteLine.ERPQuoteLineKey,QuoteLine.QuoteAlternativeId,QuoteLine.ERPProductKey,QuoteLine.Status,QuoteLine.Reason,QuoteLine.Quantity,QuoteLine.DeliveredQuantity,QuoteLine.Rank,QuoteLine.Name,QuoteLine.Description,QuoteLine.Code,QuoteLine.QuantityUnit,QuoteLine.PriceUnit,QuoteLine.IsSubscription,QuoteLine.SubscriptionUnit,QuoteLine.SubscriptionQuantity,QuoteLine.SubscriptionStart,QuoteLine.ItemNumber,QuoteLine.Url,QuoteLine.ProductCategoryKey,QuoteLine.ProductFamilyKey,QuoteLine.ProductTypeKey,QuoteLine.Supplier,QuoteLine.SupplierCode,QuoteLine.VATInfo,QuoteLine.VAT,QuoteLine.UnitCost,QuoteLine.UnitMinimumPrice,QuoteLine.UnitListPrice,QuoteLine.ExtraInfo,QuoteLine.ERPDiscountPercent,QuoteLine.ERPDiscountAmount,QuoteLine.DiscountPercent,QuoteLine.DiscountAmount,QuoteLine.UserValueOverride,QuoteLine.EarningPercent,QuoteLine.EarningAmount,QuoteLine.TotalPrice,QuoteLine.Rights,QuoteLine.Rule,QuoteLine.extraField1,QuoteLine.extraField2,QuoteLine.extraField3,QuoteLine.extraField4,QuoteLine.extraField5,QuoteLine.registered,QuoteLine.registered_associate_id,QuoteLine.updated,QuoteLine.updated_associate_id,QuoteLine.updatedCount"
      },
      "payload_property": "value",
      "url": "archive/Dynamic"
    },
    "quoteline-lookup": {
      "headers": {
        "Accept": "application/json"
      },
      "method": "POST",
      "payload": {
        "QuoteLineId": "{{ entity['QuoteLineId'] }}"
      },
      "url": "Agents/Quote/GetQuoteLine"
    },
    "quoteline-update": {
      "headers": {
        "Accept": "application/json"
      },
      "method": "POST",
      "url": "Agents/Quote/SaveQuoteLine"
    },
    "quoteversion-list": {
      "headers": {
        "Accept": "application/json"
      },
      "id_expression": "{{ PrimaryKey }}",
      "method": "GET",
      "params": {
        "$filter": "{% if since is defined and since is not none %}(QuoteVersion.updated afterTime '{{ since }}'){% endif %}",
        "$orderby": "PrimaryKey asc",
        "$select": "QuoteVersion.quoteversion_id,QuoteVersion.ERPQuoteVersionKey,QuoteVersion.QuoteId,QuoteVersion.Description,QuoteVersion.Number,QuoteVersion.State,QuoteVersion.ArchivedState,QuoteVersion.Status,QuoteVersion.Reason,QuoteVersion.LikelyQuoteAlternativeId,QuoteVersion.SentDate,QuoteVersion.FollowupId,QuoteVersion.ExpirationDate,QuoteVersion.DeliveryCountryId,QuoteVersion.HasOwnDeliveryAddress,QuoteVersion.InvoiceCountryId,QuoteVersion.HasOwnInvoiceAddress,QuoteVersion.ERPPaymentTermsKey,QuoteVersion.ERPPaymentTypeKey,QuoteVersion.ERPDeliveryTermsKey,QuoteVersion.ERPDeliveryTypeKey,QuoteVersion.Rank,QuoteVersion.ApprovedBy,QuoteVersion.ApprovedText,QuoteVersion.ApprovedRegisteredBy,QuoteVersion.ApprovedRegisteredDate,QuoteVersion.extraField1,QuoteVersion.extraField2,QuoteVersion.extraField3,QuoteVersion.extraField4,QuoteVersion.extraField5,QuoteVersion.LastRecalculated,QuoteVersion.registered,QuoteVersion.registered_associate_id,QuoteVersion.updated,QuoteVersion.updated_associate_id,QuoteVersion.updatedCount,QuoteVersion.request_associate_id,QuoteVersion.request_comment"
      },
      "payload_property": "value",
      "url": "archive/Dynamic"
    },
    "quoteversion-lookup": {
      "headers": {
        "Accept": "application/json"
      },
      "method": "POST",
      "payload": {
        "QuoteId": "{{ entity['QuoteId'] }}"
      },
      "url": "Agents/Quote/GetQuoteVersions"
    },
    "sale-webhook-insert": {
      "method": "POST",
      "payload": {
        "Events": [
          "sale.created",
          "sale.changed",
          "sale.deleted",
          "sale.completed",
          "sale.lost",
          "sale.sold"
        ],
        "Name": "Sesam Talk Sale events",
        "State": "Active",
        "TargetUrl": "{{@ service_url @}}/receivers/{{@ system @}}-sale-event/entities",
        "Type": "webhook"
      },
      "payload-type": "json",
      "url": "Webhook"
    },
    "salequote-list": {
      "headers": {
        "Accept": "application/json",
        "X-Sesam-Page": "{% if (previous_request_headers is defined and previous_request_headers['X-Sesam-Page'] is defined) %}{{ previous_request_headers['X-Sesam-Page']|int + 1 }}{% else %}1{% endif %}"
      },
      "id_expression": "{{ PrimaryKey }}",
      "method": "GET",
      "next_page_link": "{{@ base_url @}}/{{@ account_id @}}/api/v1/archive/Sale?$select=saleId,quote/quoteId,quote/connectionId,updatedDate",
      "next_page_termination_strategy": [
        "not-full-page",
        "empty-result"
      ],
      "page_size": 100,
      "params": {
        "$filter": "{% if since is defined and since is not none %}(updatedDate afterTime '{{ since }}'){% else %}(updatedDate afterTime '1970-01-01T00:00:00'){% endif %}",
        "$orderby": "PrimaryKey asc",
        "$skip": "{% if (previous_request_headers['X-Sesam-Page'] is defined) %}{{ page_size|int*(headers['X-Sesam-Page']|int-1) }}{% else %}0{% endif %}sesam:markjson",
        "$top": "{{ page_size }}"
      },
      "payload_property": "value",
      "url": "archive/Sale?$select=quote/quoteId,updatedDate"
    },
    "ticket-webhook-insert": {
      "method": "POST",
      "payload": {
        "Events": [
          "ticket.created",
          "ticket.changed"
        ],
        "Name": "Sesam Talk Ticket events",
        "State": "Active",
        "TargetUrl": "{{@ service_url @}}/receivers/{{@ system @}}-ticket-event/entities",
        "Type": "webhook"
      },
      "payload-type": "json",
      "url": "Webhook"
    },
    "update": {
      "method": "PATCH",
      "url": "{{ properties.base_url }}/{{ entity[properties.lookup_id] }}"
    },
    "user_list": {
      "headers": {
        "Accept": "application/json"
      },
      "method": "GET",
      "next_page_link": "{{@ base_url @}}/{{@ account_id @}}/api/v1/{{ properties.base_url }}",
      "next_page_termination_strategy": [
        "not-full-page",
        "empty-result"
      ],
      "page_size": 100,
      "params": {
        "$orderby": "{{ properties.primary_key }}",
        "$skip": "{{ page_size|int*page }}",
        "$top": "{{ page_size }}"
      },
      "url": "{{ properties.base_url }}"
    },
    "webhook-delete": {
      "method": "DELETE",
      "payload-type": "json",
      "url": "Webhook/{{ entity['WebhookId'] }}"
    },
    "webhook-insert": {
      "method": "POST",
      "payload-type": "json",
      "url": "Webhook"
    },
    "webhook-list": {
      "id_expression": "{{ WebhookId }}",
      "method": "GET",
      "url": "Webhook"
    },
    "webhook-lookup": {
      "method": "GET",
      "payload-type": "json",
      "url": "Webhook/{{ entity['WebhookId'] }}"
    }
  },
  "rate_limiting_delay": 60,
  "rate_limiting_retries": 3,
  "type": "system:rest",
  "url_pattern": "{{@ base_url @}}/{{@ account_id @}}/api/v1/%s",
  "verify_ssl": true
}
